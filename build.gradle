/*
 * This file is part of emuLib.
 *
 * Copyright (C) 2006-2023  Peter Jakubčo
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

plugins {
  id "java-library"
  id "maven-publish"
  id 'signing'
  id("io.github.gradle-nexus.publish-plugin") version "1.1.0"
}

group 'net.emustudio'
version '12.0.0'

repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.slf4j:slf4j-api:2.0.5'
  implementation 'net.jcip:jcip-annotations:1.0'

  testImplementation 'junit:junit:4.13.2'
  testImplementation 'org.easymock:easymock:5.0.1'
}

java {
  withJavadocJar()
  withSourcesJar()
}

nexusPublishing {
  repositories {
    sonatype()
  }

  // these are not strictly required. The default timeouts are set to 1 minute. But Sonatype can be really slow.
  // If you get the error "java.net.SocketTimeoutException: timeout", these lines will help.
  connectTimeout = Duration.ofMinutes(3)
  clientTimeout = Duration.ofMinutes(3)
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      artifactId = 'emulib'
      from components.java
      pom {
        name = 'emuLib'
        description = 'Run-time library used by emuStudio and plugins'
        url = 'https://github.com/emustudio/emuLib'
        licenses {
          license {
            name = 'GNU General Public License, Version 3.0'
            url = 'https://www.gnu.org/licenses/gpl-3.0.txt'
          }
        }
        developers {
          developer {
            id = 'vbmacher'
            name = 'Peter Jakubčo'
            email = 'pjakubco@gmail.com'
          }
          developer {
            id = 'sulir'
            name = 'Matúš Sulír'
            email = 'matus.sulir@gmail.com'
          }
        }
        scm {
          connection = 'scm:git:git@github.com:emustudio/emuLib.git'
          developerConnection = 'scm:git:git@github.com:emustudio/emuLib.git'
          url = 'https://github.com/emustudio/emuLib'
        }
      }
    }
  }

  repositories {
    maven {
      // configure publishing to a local directory for testing
      name = "local"
      def releasesRepoUrl = "$buildDir/repos/releases"
      def snapshotsRepoUrl = "$buildDir/repos/snapshots"
      url = version.endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl
    }
  }
}

signing {
  required {
    project.gradle.taskGraph.hasTask("publish")
  }

  def signingKey = findProperty("GPG_KEY") ?: System.getenv("GPG_KEY")
  def signingPassword = findProperty("GPG_PASSWORD") ?: System.getenv("GPG_PASSWORD")
  useInMemoryPgpKeys(signingKey, signingPassword)
  sign publishing.publications.mavenJava
}

javadoc {
  if (JavaVersion.current().isJava9Compatible()) {
    options.addBooleanOption('html5', true)
  }
}
